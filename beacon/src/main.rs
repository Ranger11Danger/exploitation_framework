#![allow(unused_imports)]
use tokio::net::TcpStream;
use tokio::io::{self, AsyncReadExt, AsyncWriteExt};
use std::str;


#[tokio::main]
async fn main(){
    
    let mut s = TcpStream::connect("localhost:4444").await.unwrap();
    let (mut rd, mut wr) = s.split();

    loop{
        let mut buff = vec![0;128];
        match rd.read(&mut buff).await{
            Ok(0) => return,
            Ok(_n) => {
                        match str::from_utf8(&buff[..6]).unwrap(){
                            "hello\n" => {
                                wr.write(b"world\n").await.unwrap();
                            }
                            _ => print!("{}", str::from_utf8(&buff[..6]).unwrap())
                        }
                    }
                
            Err(_) => return,
            }
            
        }
}     
